#!/bin/bash

# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –õ–û–ö–ê–õ–¨–ù–û–ú —Ä–µ–∂–∏–º–µ (–±–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞)
cd "$(dirname "$0")/.."

echo "=========================================="
echo "   –ó–∞–ø—É—Å–∫ –º—ë—Ä–¥–∂–µ—Ä (–õ–æ–∫–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º)"
echo "=========================================="
echo ""
echo "‚ÑπÔ∏è  –õ–æ–∫–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º: –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ë–ï–ó –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞"
echo "‚ÑπÔ∏è  –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –Ω–∞ –≤–∞—à–µ–º –∫–æ–º–ø—å—é—Ç–µ—Ä–µ"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
if ! docker info &> /dev/null; then
    echo "‚ùå Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    echo ""
    echo "üì¶ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞:"
    echo "   1. –û—Ç–∫—Ä–æ–π—Ç–µ Docker Desktop (–∏–∫–æ–Ω–∫–∞ –∫–∏—Ç–∞ –≤ –≤–µ—Ä—Ö–Ω–µ–º –º–µ–Ω—é)"
    echo "   2. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –ø–æ–∫–∞ Docker –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è"
    echo "   3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞"
    echo ""
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞..."
    exit 1
fi

echo "‚úì Docker –∑–∞–ø—É—â–µ–Ω"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ—Ä–Ω–µ—Ç (—Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è)
if ! ping -c 1 8.8.8.8 &> /dev/null; then
    echo "‚ö†Ô∏è  –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–∫–∞—á–∞–Ω—ã –ª–∏ –æ–±—Ä–∞–∑—ã
    if ! docker images | grep -q "postgres\|nginx"; then
        echo "‚ùå Docker –æ–±—Ä–∞–∑—ã –µ—â—ë –Ω–µ —Å–∫–∞—á–∞–Ω—ã"
        echo ""
        echo "üì• –î–ª—è –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –Ω—É–∂–µ–Ω –∏–Ω—Ç–µ—Ä–Ω–µ—Ç (–æ–¥–∏–Ω —Ä–∞–∑)"
        echo "   –ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±—Ä–∞–∑–æ–≤ (~1.5 GB) –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –Ω–µ –Ω—É–∂–µ–Ω"
        echo ""
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞..."
        exit 1
    fi

    echo "‚úì Docker –æ–±—Ä–∞–∑—ã —É–∂–µ —Å–∫–∞—á–∞–Ω—ã - –º–æ–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞!"
else
    echo "‚úì –ò–Ω—Ç–µ—Ä–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω"
fi

echo ""
echo "[1/3] –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose -f docker-compose.local.yml down 2>/dev/null || true

echo ""
echo "[2/3] –ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
echo "    (—ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 30-60 —Å–µ–∫—É–Ω–¥ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ)"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–∑—ã
if docker images | grep -q "test-bff-service\|test-files-service\|test-projects-service\|test-generator-service"; then
    echo "‚úì –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–∂–µ —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–∑—ã"
    docker-compose -f docker-compose.local.yml up -d
else
    echo "‚ö†Ô∏è  –û–±—Ä–∞–∑—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã - —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–±–æ—Ä–∫–∞ (–Ω—É–∂–µ–Ω –∏–Ω—Ç–µ—Ä–Ω–µ—Ç)"
    if ping -c 1 8.8.8.8 &> /dev/null; then
        docker-compose -f docker-compose.local.yml up -d --build
    else
        echo "‚ùå –ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –¥–ª—è —Å–±–æ—Ä–∫–∏ –æ–±—Ä–∞–∑–æ–≤"
        echo ""
        echo "üì• –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º:"
        echo "   cd '/Users/germanmironchuc/Desktop/pet projects/test'"
        echo "   docker-compose -f docker-compose.local.yml build"
        echo ""
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞..."
        exit 1
    fi
fi

# –ñ–¥—ë–º –ø–æ–∫–∞ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—Å—Ç—è—Ç—Å—è
echo ""
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç
if curl -s http://localhost/api >/dev/null 2>&1; then
    echo "‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
else
    echo "‚ö†Ô∏è  –°–µ—Ä–≤–∏—Å—ã –µ—â—ë –∑–∞–ø—É—Å–∫–∞—é—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ..."
    sleep 10
fi

echo ""
echo "[3/3] –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
cd frontend

# –£–¥–∞–ª—è–µ–º –ø–∞–ø–∫—É release –µ—Å–ª–∏ –æ–Ω–∞ –º–µ—à–∞–µ—Ç
if [ -d "release" ]; then
    rm -rf release
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
if [ ! -d "node_modules" ]; then
    echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    npm install
fi

echo ""
echo "‚úÖ –í—Å—ë –≥–æ—Ç–æ–≤–æ! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è —Å–µ–π—á–∞—Å..."
echo ""
echo "‚ÑπÔ∏è  –†–µ–∂–∏–º: –õ–æ–∫–∞–ª—å–Ω—ã–π (localhost)"
echo "‚ÑπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: –∑–∞–∫—Ä–æ–π—Ç–µ –æ–∫–Ω–æ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C"
echo ""

# –ó–∞–ø—É—Å–∫–∞–µ–º –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ
# –£–±–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
pkill -f "vite\|electron" || true
sleep 2

# –ó–∞–ø—É—Å–∫–∞–µ–º Vite –≤ —Ñ–æ–Ω–µ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
echo "üì¶ –ó–∞–ø—É—Å–∫ Vite..."
yarn dev:local &
VITE_PID=$!

# –ñ–¥—ë–º –∑–∞–ø—É—Å–∫–∞ Vite (–ø—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞)
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Vite..."
for i in {1..30}; do
    if curl -s http://localhost:5173 > /dev/null 2>&1; then
        echo "‚úÖ Vite –∑–∞–ø—É—â–µ–Ω!"
        break
    fi
    sleep 1
    echo "   –ü–æ–ø—ã—Ç–∫–∞ $i/30..."
done

# –ó–∞–ø—É—Å–∫–∞–µ–º Electron
echo "üñ•Ô∏è  –ó–∞–ø—É—Å–∫ Electron..."
npx cross-env VITE_BACKEND_LOCAL=true electron . &
ELECTRON_PID=$!

echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!"
echo "üì± Vite: http://localhost:5173"
echo "üñ•Ô∏è  Electron: PID $ELECTRON_PID"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
cleanup() {
    echo ""
    echo "üõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã..."

    # –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã
    echo "üì¶ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Vite –∏ Electron..."
    kill $VITE_PID $ELECTRON_PID 2>/dev/null || true
    pkill -f "vite\|electron" || true

    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    echo "üê≥ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    cd "$(dirname "$0")/.."
    docker-compose -f docker-compose.local.yml down 2>/dev/null || true

    echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    exit 0
}

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
trap cleanup SIGINT SIGTERM

# –ñ–¥—ë–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è Electron
wait $ELECTRON_PID

# –ï—Å–ª–∏ Electron –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å–∞–º, —Ç–æ–∂–µ –¥–µ–ª–∞–µ–º cleanup
cleanup
